% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flotsam.R
\name{ltsa}
\alias{ltsa}
\title{Local Tangent Space Alignment}
\usage{
ltsa(
  X,
  n_neighbors = 15,
  ndim = 2,
  nn_method = "nnd",
  eig_method = "rspectra",
  include_self = TRUE,
  normalize = FALSE,
  ret_B = FALSE,
  n_threads = 0,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{X}{The input data matrix or dataframe with one observation per row.}

\item{n_neighbors}{The size of local neighborhood (in terms of number of
neighboring sample points) used for manifold approximation.}

\item{ndim}{The dimension of the space to embed into.}

\item{nn_method}{Method for finding nearest neighbors. Can be one of:
\itemize{
\item \code{"nnd"} Approximate nearest neighbors by Nearest Neighbor Descent.
\item \code{"exact"} Exact nearest neighbors by exhaustively comparing all items.
Slow for large datasets.
}}

\item{eig_method}{How to carry out the eigendecomposition. Possible values are:
\itemize{
\item \code{"rspectra"} Use \code{\link[RSpectra:eigs]{RSpectra::eigs_sym()}}.
\item \code{"irlba"} Use \code{\link[irlba:irlba]{irlba::irlba()}}.
\item \verb{"svdr} Use \code{\link[irlba:svdr]{irlba::svdr()}}.
\item \code{"fullsvd"} Use the \code{\link[base:svd]{base::svd()}} function. This is only feasible for small
datasets and should be used for diagnostic purposes only.
\item \code{"eigen"} Use the \code{\link[base:eigen]{base::eigen()}} function. This is only feasible for
small datasets and should be used for diagnostic purposes only.
}}

\item{include_self}{Should an item be part of its own neighborhood? This has
a minor effect on most results, but work by Zhang and co-workers (2017)
suggests that this is in effect the main difference between LTSA and the
Hessian Locally Linear Embedding (HLLE) method, so setting this to \code{FALSE}
may allow emulating the HLLE method.}

\item{normalize}{If \code{TRUE} calculate the eigendecomposition on a normalized
version of the Laplacian. This may be slightly easier to converge while
giving similar results to the un-normalized case. It may also have suitable
better properties if clustering is to be carried out on the eigenvectors.}

\item{ret_B}{If \code{TRUE}, return the matrix instead of the eigenvectors. This
is mainly useful for diagnostic purposes if eigendecomposition is failing.}

\item{n_threads}{Number of threads to use. Applies only to the nearest
neighbor calculation.}

\item{verbose}{If \code{TRUE} log information about progress to the console.}

\item{...}{Extra arguments to be passed to the eigendecomposition method
specified by \code{eig_method}. For \code{"rspectra"}, arguments are passed to the
\code{opts} list. Suitable parameters include:
\itemize{
\item \code{ncv} Number of Lanzcos vectors to use.
\item \code{tol} Tolerance.
\item \code{maxitr} Maximum number of iterations.
}

For \code{"irlba"} suitable arguments are:
\itemize{
\item \code{work} Working subspace dimension size.
\item \code{tol} Tolerance.
\item \code{maxit} Maximum number of iterations.
}

For \code{"svdr"} suitable arguments are:
\itemize{
\item \code{extra} Number of extra vectors to use.
\item \code{tol} Tolerance.
\item \code{it}  Maximum number of iterations.
}

For more details see the documentation for \code{\link[RSpectra:eigs]{RSpectra::eigs_sym()}},
\code{\link[irlba:irlba]{irlba::irlba()}} and \code{\link[irlba:svdr]{irlba::svdr()}} functions, respectively. Don't pass
other arguments unless you know what you are doing, as it may cause the
\code{ltsa} to fail.}
}
\description{
Apply the Local Tangent Space Alignment (LTSA) method (Zhang and Zha, 2004)
for dimensionality reduction.
}
\examples{
n <- 1000
max_z <- 10

phi <- stats::runif(n, min = 1.5 * pi, max = 4.5 * pi)
x <- phi * cos(phi)
y <- phi * sin(phi)
z <- stats::runif(n, max = max_z)
swiss_roll <- data.frame(x, y, z)

# unroll it
swiss_ltsa <- ltsa(swiss_roll)
plot(swiss_ltsa, col = phi)

# compare with PCA
swiss_pca <- stats::prcomp(swiss_roll, rank. = 2, scale = FALSE, retx = TRUE)$x
plot(swiss_pca, col = phi)
}
\references{
Zhang, Z., & Zha, H. (2004).
Principal manifolds and nonlinear dimensionality reduction via tangent space alignment.
\emph{SIAM journal on scientific computing}, \emph{26}(1), 313-338.
\url{https://doi.org/10.1137/S1064827502419154}

Zhang, S., Ma, Z., & Tan, H. (2017).
On the Equivalence of HLLE and LTSA.
\emph{IEEE transactions on cybernetics}, \emph{48}(2), 742-753.
\url{https://doi.org/10.1109/TCYB.2017.2655338}
}
